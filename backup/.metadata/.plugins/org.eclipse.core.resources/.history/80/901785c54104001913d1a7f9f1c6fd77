package com.qa.Library;

import java.util.HashMap;
import java.util.Map;

public class Library {
	private String name;
	private Map<Integer, Item> items;
	private Map<Integer, Person> people;

	public Library(String name) {
		this.name = name;
		this.items = new HashMap<Integer, Item>();

	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Map<Integer, Item> getItems() {
		return this.items;

	}

	public boolean checkOutByID(int ID) {
		items.get(ID).setAvailable(false);
		return getItemByID(ID).isAvailable();

	}

	public boolean checkInByID(int ID) {
		items.get(ID).setAvailable(true);
		return getItemByID(ID).isAvailable();

	}

	public void removeByID(int ID) {

		items.remove(ID);

	}

	public String editItem(int ID, String name) {
		items.get(ID).setName(name);
		return getItemByID(ID).getName();

	}

	public Person addPerson(String name) {
		Person nPerson = new Person(name);
		people.put(nPerson.getPersonID(), nPerson);
		return nPerson;

	}
	public Void delPerson(int ID) {
		people.remove(ID);
		

	}

	public Item getItemByID(Integer ID) {

		String name = "Item Not Found";
		Item defaultItem = new Book(false, name, name, false, name, 0);

		// List<Item> tempList = items.stream().filter(item -> item.getItemId() ==
		// ID).collect(Collectors.toList());

		if (this.items.get(ID) == null) {
			return defaultItem;
		}

		// (tempList.size() == 0) ? System.out.println("jh") :
		// System.out.println("ihg");
		return this.items.get(ID);

	}

	public void addItem(Item item) {
		this.items.put(item.getItemId(), item);
	}

}
